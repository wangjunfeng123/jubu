<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ninep.jubu.mapper.AuthMapper" >
  <resultMap id="BaseResultMap" type="com.ninep.jubu.domain.Auth" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="auth_type" property="authType" jdbcType="INTEGER" />
    <result column="add_user" property="addUser" jdbcType="CHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="mod_user" property="modUser" jdbcType="CHAR" />
    <result column="mod_time" property="modTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, value, auth_type, add_user, add_time, mod_user, mod_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from auth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ninep.jubu.domain.Auth" >
    insert into auth (id, name, value, 
      auth_type, add_user, add_time, 
      mod_user, mod_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{authType,jdbcType=INTEGER}, #{addUser,jdbcType=CHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{modUser,jdbcType=CHAR}, #{modTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ninep.jubu.domain.Auth" >
    insert into auth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="authType != null" >
        auth_type,
      </if>
      <if test="addUser != null" >
        add_user,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="modUser != null" >
        mod_user,
      </if>
      <if test="modTime != null" >
        mod_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="authType != null" >
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="addUser != null" >
        #{addUser,jdbcType=CHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modUser != null" >
        #{modUser,jdbcType=CHAR},
      </if>
      <if test="modTime != null" >
        #{modTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ninep.jubu.domain.Auth" >
    update auth
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="authType != null" >
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="addUser != null" >
        add_user = #{addUser,jdbcType=CHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modUser != null" >
        mod_user = #{modUser,jdbcType=CHAR},
      </if>
      <if test="modTime != null" >
        mod_time = #{modTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ninep.jubu.domain.Auth" >
    update auth
    set name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      auth_type = #{authType,jdbcType=INTEGER},
      add_user = #{addUser,jdbcType=CHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      mod_user = #{modUser,jdbcType=CHAR},
      mod_time = #{modTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getByUrl" resultMap="BaseResultMap">
    SELECT * FROM auth
    WHERE value = #{url,jdbcType=VARCHAR}
  </select>
</mapper>